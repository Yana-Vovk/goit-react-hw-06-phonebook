{"version":3,"sources":["components/Styles.module.css","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","utils/getContact.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","stateName","number","payload","id","shortid","generate","name","deleteContact","changeFilter","connect","dispatch","onSubmit","contactActions","useState","setName","setNumber","handleChange","e","target","value","reset","className","styles","boxFrame","preventDefault","type","pattern","title","required","onChange","state","contacts","filter","getContact","normalizetext","toLowerCase","includes","items","contact","onDelete","ulContainer","map","liItem","spaceBetween","delBtn","onClick","App","Container","ContainerHeading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","createReducer","actions","find","_","combineReducers","contactPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.77ef0ba3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Styles_Container__1e9U3\",\"ContainerHeading\":\"Styles_ContainerHeading__3Ladr\",\"boxFrame\":\"Styles_boxFrame__1M3VV\",\"delBtn\":\"Styles_delBtn__Ly7GA\",\"liItem\":\"Styles_liItem__B7f6p\",\"ulContainer\":\"Styles_ulContainer__2Jdiu\",\"spaceBetween\":\"Styles_spaceBetween__wIJDv\"};","import shortid from \"shortid\";\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contacts/addContact', function prepare( { stateName, number }) {\n\n    return {\n        payload: \n            {id: shortid.generate(),\n            name: stateName,\n            number}\n    }\n});\nconst deleteContact = createAction('contacts/deleteContact');\nconst changeFilter = createAction('contacts/changeFilter');\n\n\nexport default { addContact, deleteContact, changeFilter };","import React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport contactActions from '../../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport styles from '../Styles.module.css';\n\nfunction ContactForm({onSubmit}) {\n    const [stateName, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            \n            case 'number':\n                setNumber(value);                \n                break;\n            \n            default:\n                return;\n        }\n    };\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSubmit ( { stateName, number } );\n        reset();\n    }\n\n     return (\n            <form className={styles.boxFrame} onSubmit={handleSubmit}>\n                <label>Name<br />\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                        value={stateName}\n                        onChange={handleChange}\n                    />\n                </label><br />\n                <label>Number<br />\n                    <input\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                        value={number}\n                        onChange={handleChange}\n                    />\n                </label> <br />\n                <button type=\"submit\" onSubmit={reset}>Add contact</button>\n            </form>\n        );\n}\n    \n \nContactForm.propTypes = {\n    stateName:PropTypes.string,\n    number:PropTypes.string,\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmit: ({ stateName, number })=> dispatch(contactActions.addContact({ stateName, number }))\n  })\n\nexport default connect(null, mapDispatchToProps)(ContactForm);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactActions from '../../redux/contacts/contacts-actions';\n\nconst Filter = ({ value, onChange }) => {\n    return (\n        <label>Find contacts by name <br />\n            <input\n                type=\"text\"\n                name=\"filter\"\n                value={value}\n                onChange={onChange} />\n        </label>\n    );\n}\n    \nconst mapStateToProps = state => ({\n    value: state.contacts.filter\n  });\n  \n  const mapDispatchToProps = dispatch => ({\n    onChange: (e)=> dispatch(contactActions.changeFilter(e.target.value))\n  })\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(Filter);","const getContact = (value, contacts) => {   \n    const normalizetext = value.toLowerCase();\n      \n    return contacts.filter(({name}) =>\n              name.toLowerCase().includes(normalizetext)\n      )\n};\n  \nexport default getContact; ","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport getContact from '../../utils/getContact';\nimport contactActions from '../../redux/contacts/contacts-actions';\nimport styles from '../Styles.module.css';\nimport { AiOutlineUser } from \"react-icons/ai\";\nimport shortid from \"shortid\";\n\nfunction ContactList ({ contact, onDelete }) {\n    return (\n        <ul className={styles.ulContainer}>\n            {contact.map(({ name, number })  => (\n                <li className={styles.liItem} key={shortid.generate()}>\n                    <span className={styles.spaceBetween}><AiOutlineUser/></span>\n                    <span className={styles.spaceBetween}>{name}: </span>\n                    <span className={styles.spaceBetween}>{number} </span>\n                    <button className={styles.delBtn} type=\"button\" onClick={() => onDelete(name)}>Delete</button>\n                </li>))}\n        </ul>\n    );\n}; \n\n\nconst mapStateToProps = ({contacts: {filter, items}}) => ({\n    contact:  getContact(filter, items) \n});\n\nconst mapDispatchToProps = dispatch => ({\n    onDelete: (name)=> dispatch(contactActions.deleteContact(name))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import './App.css';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport styles from './components/Styles.module.css';\n\nfunction App() {\n    \n  return (\n    <div className={styles.Container}>\n        <div>\n          <h1 className={styles.ContainerHeading}>Phonebook</h1>\n          <ContactForm/>\n        </div>\n        <div>\n          <h2 className={styles.ContainerHeading}>Contacts</h2>\n          <div className={styles.boxFrame}>\n          <Filter/>\n          <ContactList/>\n            </div>\n        </div>\n      </div> \n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\n\nconst initialState = {\n    contacts: {\n        items: \n         [\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ],\n        filter: '',\n    \n    }\n};\n\nconst items = createReducer(initialState.contacts.items, {\n    [actions.addContact]: (state, { payload }) =>  state.find((contact) => contact.name.includes(payload.name)) ? state : [...state, payload], \n    \n    [actions.deleteContact]: (state, { payload }) => state.filter(({ name }) => name !== payload)   \n});\n\n const filter = createReducer(initialState.contacts.filter, {\n     [actions.changeFilter]: (_, { payload }) => payload\n });\n\n\nexport default combineReducers({\n    items,\n    filter\n})","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contactReducers from './contacts/contacts-reducer';\n\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER\n} from 'redux-persist';\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\n\nconst contactPersistConfig = {\n    key: 'contacts',\n    storage,\n    blacklist: ['filter']\n};\n\nconst store = configureStore({\n    reducer: {\n        contacts:  persistReducer(contactPersistConfig, contactReducers)\n            },\n    middleware: [...getDefaultMiddleware({\n         serializableCheck: {\n             ignoredActions: [   FLUSH,\n                                 REHYDRATE,\n                                 PAUSE,\n                                 PERSIST,\n                                 PURGE,\n                                 REGISTER\n             ]\n     }\n     }), logger],\n    devTools: process.env.NODE_ENV === 'development'\n    \n});\n\nconst persistor = persistStore(store);\n\nexport default {persistor, store};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n      <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}